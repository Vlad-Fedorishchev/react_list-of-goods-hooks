{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","sortedGoods","setSortedGoods","useEffect","goods","visibleGoods","sort","goodOne","goodTwo","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCL,mBAASF,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAyBA,OAvBAC,qBAAU,WACRD,EAhCJ,SACEE,EADF,GAGG,IADCL,EACF,EADEA,SAAUH,EACZ,EADYA,WAENS,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQT,GACN,KAAKP,EAASiB,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAQK,OAASJ,EAAQI,OAElC,QACE,OAAO,MAIThB,GACFS,EAAaQ,UAGRR,EAUHS,CAAkBrB,EAAiB,CAAEM,WAAUH,kBAEhD,CAACG,EAAUH,IAoBZ,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASiB,WAEtCS,QA1BR,WACElB,EAAYR,EAASiB,WAmBjB,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaP,EAASmB,SAEtCO,QAjCR,WACElB,EAAYR,EAASmB,SA0BjB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAxCR,WACErB,GAAeD,IAiCX,sBAWEA,GAAcG,IAAaP,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QA7CV,WACErB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAUJ,6BACGG,EAAYkB,KAAI,SAAAC,GACf,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fe4d54e9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n  NONE,\n}\n\ntype ReorderedOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderedOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodOne, goodTwo) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodOne.localeCompare(goodTwo);\n\n      case SortType.LENGTH:\n        return goodOne.length - goodTwo.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [sortedGoods, setSortedGoods] = useState(goodsFromServer);\n\n  useEffect(() => {\n    setSortedGoods(\n      getReorderedGoods(goodsFromServer, { sortType, isReversed }),\n    );\n  }, [sortType, isReversed]);\n\n  function sortByAlphabet() {\n    setSortType(SortType.ALPHABET);\n  }\n\n  function sortByLength() {\n    setSortType(SortType.LENGTH);\n  }\n\n  function reverseList() {\n    setIsReversed(!isReversed);\n  }\n\n  function resetResult() {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetResult}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => {\n          return (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}